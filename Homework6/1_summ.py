'''
1. Подсчитать, сколько было выделено памяти под переменные в ранее
разработанные программы в рамках первых трех уроков. Проанализировать
результат и определить программы с наиболее эффективным использованием памяти.
Примечание: Для анализа возьмите любые 1-3 ваших программ или несколько
вариантов кода для одной и той же задачи. Результаты анализа вставьте в виде
комментариев к коду. Также укажите в комментариях версию Python
и разрядность вашей ОС.
'''

# Найти сумму и произведение цифр введённого пользователем трехзначного числа
# Использован самописный модуль sum_memory
import sum_memory

num = input('Введите трёхзначное число: ')

print('=' * 10, 'Вариант № 1', '=' * 10)
# решение через долнительные переменные
num = int(num)
a = num // 100
b = num % 100 // 10
c = num % 10
summ = a + b + c
print(f'Сумма цифр числа = {summ}')
print(f'Произведение цифр числа = {a * b * c}')

sum_mem = sum_memory.SumMemory()
sum_mem.extend(num, a, b, c, summ)
sum_mem.print_sum()

print('=' * 10, 'Вариант № 2', '=' * 10)
# решение через цикл
num = str(num)
summa = 0
mult = 1
for i in num:
    summa += int(i)
    mult *= int(i)
print(f'Сумма цифр числа = {summa}')
print(f'Произведение цифр числа = {mult}')

sum_mem = sum_memory.SumMemory()
sum_mem.extend(num, summa, mult, i)
sum_mem.print_sum()

# Версия Python 3.7 Windows 10 / 64-разрядная ОС
